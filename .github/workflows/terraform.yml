name: Terraform CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'infra/terraform/**'
  pull_request:
    branches: [main]
    paths:
      - 'infra/terraform/**'
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply Terraform changes'
        required: false
        default: false
        type: boolean

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1
      - name: Verify required secrets
        run: |
          if [ -z "${TF_VAR_db_password}" ]; then
            echo "ERROR: GitHub secret DB_PASSWORD is not set for this repository or environment." >&2
            exit 1
          fi
          if [ -z "${AWS_ACCESS_KEY_ID}" ]; then
            echo "ERROR: GitHub secret AWS_ACCESS_KEY_ID is not set for the production environment." >&2
            exit 1
          fi
          if [ -z "${AWS_SECRET_ACCESS_KEY}" ]; then
            echo "ERROR: GitHub secret AWS_SECRET_ACCESS_KEY is not set for the production environment." >&2
            exit 1
          fi
          echo "✅ All required secrets are available"
      - name: Terraform Init
        working-directory: infra/terraform/environments/production
        run: terraform init
      - name: Terraform Validate
        working-directory: infra/terraform/environments/production
        run: terraform validate
      - name: Terraform Plan
        timeout-minutes: 10
        working-directory: infra/terraform/environments/production
        run: terraform plan
      - name: Terraform Apply (Manual Approval Required)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.apply == 'true'
        working-directory: infra/terraform/environments/production
        run: terraform apply -auto-approve
      - name: Apply Skipped - Manual Approval Required
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.apply != 'true')
        run: |
          echo "⚠️  Terraform Apply was skipped for security reasons."
          echo "📋 To apply changes, manually trigger the workflow with 'Apply Terraform changes' set to 'true'"
          echo "🔒 This prevents accidental infrastructure changes from push events"
